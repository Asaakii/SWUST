DATA SEGMENT
	ORIGIN DW 1345H, 8270H, 0123H, 0638H, 9389H, 3984H, 9327H, 5893H, 7269H, 6289H
	BUF DW 0
	PROMPT DB 'N', '$'
DATA ENDS

STACK SEGMENT PARA STACK 'STACK'
	BUF_1 DW 20H DUP (0)
	LEN EQU $-BUF_1
STACK ENDS

CODE SEGMENT
	ASSUME CS:CODE, DS:DATA, SS:STACK
START:
	MOV AX, DATA
	MOV DS, AX
	MOV AX, STACK
	MOV SS, AX
	MOV SP, LEN

	MOV CX, 10
	MOV SI, OFFSET ORIGIN
PRINT1:
	MOV DX, [SI]
	CALL PRINT_4_HEX
	CALL PRINT_BLACK
	ADD SI, 2
	LOOP PRINT1
	CALL PRINT_ENTER

	MOV CX, 9
	MOV DI, 0
FOR1:
	CALL BUBBLE_SORT
	ADD DI, 2
	LOOP FOR1

	MOV CX, 10
	MOV SI, OFFSET ORIGIN
PRINT2:
	MOV DX, [SI]
	CALL PRINT_4_HEX
	CALL PRINT_BLACK
	ADD SI, 2
	LOOP PRINT2

	MOV SI, OFFSET BUF
	CALL PRINT_ENTER
	CALL INPUT_4_HEX
	MOV [SI], DX

	CALL PRINT_ENTER
	CALL FIND_4_HEX

	MOV AH, 4CH
	INT 21H

FIND_4_HEX:
	MOV BH, AH
	MOV DX, BUF[0]
	MOV CX, 10
	MOV DI, 1
	MOV SI, OFFSET ORIGIN
FIND:
	CMP DX, [SI]
	JZ PRINT_LOCATION
	ADD SI, 2
	INC DI
	LOOP FIND

PRINT_N:
	MOV DX, OFFSET PROMPT
	MOV AH, 09H
	INT 21H
	JMP EXIT

PRINT_LOCATION:
	MOV DX, DI
	ADD DL, 30H
	CMP DL, 39H
	JA UPPER
	MOV AH, 02H
	INT 21H
	JMP EXIT
UPPER:
	ADD DL, 7H
	MOV AH, 02H
	INT 21H
EXIT:
RET

INPUT_1_HEX:
	PUSHF
	PUSH BX
	MOV BH, AH
	MOV AH, 01H
	INT 21H
	CMP AL, 'A'
	JB I1
	SUB AL, 37H
	JMP SHORT RETURN
I1:
	SUB AL, 30H
RETURN:
	MOV AH, BH
	POP BX
	POPF
RET

INPUT_2_HEX:
	PUSH AX
	PUSHF
	CALL INPUT_1_HEX
	MOV DL, AL
	MOV AL, 10H
	MUL DL
	MOV DL, AL
	CALL INPUT_1_HEX
	ADD DL, AL
	POPF
	POP AX
RET

INPUT_4_HEX:
	CALL INPUT_2_HEX
	MOV DH, DL
	CALL INPUT_2_HEX
RET

BUBBLE_SORT PROC NEAR
	PUSH BX
	PUSH DX
	MOV SI, DI
LOOP1:
	ADD SI, 2  
	MOV BX, ORIGIN[DI]
	CMP BX, ORIGIN[SI]
	JA SWAP
	JMP NEXT
SWAP:    
	MOV DX, ORIGIN[SI]
	MOV ORIGIN[DI], DX
	MOV ORIGIN[SI], BX 
NEXT:
	CMP SI, 18
	JL LOOP1
	POP DX
	POP BX
	RET
BUBBLE_SORT ENDP

PRINT_1_HEX:
	PUSH AX
	PUSH DX
	PUSHF
	CMP DL, 0AH
	JB P1
	ADD DL, 7H
P1:
	ADD DL, 30H
	MOV AH, 02H
	INT 21H
	POPF
	POP DX
	POP AX
RET

PRINT_2_HEX:
	PUSH AX
	PUSH DX
	PUSHF
	MOV AL, DL
	MOV AH, 0
	MOV DL, 10H
	DIV DL
	MOV DL, AL
	CALL PRINT_1_HEX
	MOV DL, AH
	CALL PRINT_1_HEX
	POPF
	POP DX
	POP AX
RET

PRINT_4_HEX:
	PUSH AX
	PUSH DX
	PUSHF
	XCHG DL, DH
	CALL PRINT_2_HEX
	MOV DL, DH
	CALL PRINT_2_HEX
	POPF
	POP DX
	POP AX
RET

PRINT_BLACK:
	PUSH AX
	PUSH DX
	MOV DL, ' '
	MOV AH, 02H
	INT 21H
	POP DX
	POP AX
RET

PRINT_ENTER:
	PUSH AX
	PUSH DX
	MOV  DL, 0DH
	MOV  AH, 02H
	INT  21H
	MOV  DL, 0AH
	MOV  AH, 02H
	INT  21H
	POP  DX
	POP  AX
RET

CODE ENDS

END START
